{
  "projectName": "project-clock",
  "projectSettings": {
    "timeParams": {
      "day": 8,
      "week": 5,
      "month": 20,
      "year": 260
    }
  },
  "tasks": [
    {
      "subject": "Study how TypeScript CLI apps are created and tested",
      "begin": "2024-07-02T06:00:00.000Z",
      "end": "2024-07-02T13:41:29.355Z"
    },
    {
      "subject": "Initialize the project",
      "description": "Initialize the project with TypeScript, Rollup, ESLint and Prettier.",
      "begin": "2024-07-03T06:22:45.639Z",
      "suspend": [
        "2024-07-03T08:06:02.271Z",
        "2024-07-03T09:20:11.637Z",
        "2024-07-03T11:11:14.768Z",
        "2024-07-03T13:10:42.887Z",
        "2024-07-03T15:25:20.927Z",
        "2024-07-04T07:50:57.098Z"
      ],
      "resume": [
        "2024-07-03T09:06:03.898Z",
        "2024-07-03T10:19:18.605Z",
        "2024-07-03T11:53:28.636Z",
        "2024-07-03T14:24:19.721Z",
        "2024-07-04T06:58:41.201Z",
        "2024-07-04T08:50:22.239Z"
      ],
      "end": "2024-07-04T09:25:16.616Z"
    },
    {
      "subject": "Create a test to test that the app prints it's name with the current version when it is run from the command line",
      "description": "Add and configure jest, create the test using node:child_process.execSync(), and edit pclock.ts so that the test is passed.",
      "begin": "2024-07-04T09:30:12.422Z",
      "end": "2024-07-04T10:52:50.982Z"
    },
    {
      "subject": "Designing the basic structure of the application a little",
      "description": "Going through and editing the previous README.md.",
      "begin": "2024-07-04T11:18:05.231Z",
      "suspend": [
        "2024-07-04T12:24:24.647Z",
        "2024-07-05T06:57:48.681Z",
        "2024-07-05T08:37:35.161Z"
      ],
      "resume": [
        "2024-07-05T06:26:30.508Z",
        "2024-07-05T07:24:39.927Z",
        "2024-07-05T09:05:20.602Z"
      ],
      "end": "2024-07-05T10:21:33.749Z"
    },
    {
      "subject": "A new project time sheet can be created",
      "description": "Create tests for testing that the command 'new' works and edit the code so that the tests are passed. Use the commander library for the implementation and study how the library is used. Previous test for argumentless call had to be rewritten too.",
      "begin": "2024-07-05T10:24:35.655Z",
      "suspend": ["2024-07-05T12:48:14.935Z", "2024-07-06T08:26:23.033Z"],
      "resume": ["2024-07-06T05:42:52.001Z", "2024-07-06T08:45:43.944Z"],
      "end": "2024-07-06T12:24:58.481Z"
    },
    {
      "subject": "Clock can be started and stopped",
      "description": "Create tests for testing the new functionality and edit the code so that the tests are passed.\n\n'Start' command without any arguments creates a new task with current timestamp as 'subject' and 'begin' value. If the task descriptor (regexp matcher) is passed as an argument, a task is created with this string as 'subject' and current timestamp as the 'begin' value. Command exits with an error if the task already exists.\n\n'Stop' command without any arguments stops an active (started but not stopped) task if there is only one of such tasks, by setting the 'end' value of the task to current timestamp. 'Stop' with a task descriptor as argument stops a task with matching 'subject'. If the descriptor matches more than one task, command returns with an error.",
      "begin": "2024-07-07T07:54:44.918Z",
      "suspend": [
        "2024-07-07T08:02:21.348Z",
        "2024-07-07T11:56:39.640Z",
        "2024-07-08T08:19:43.315Z",
        "2024-07-08T15:00:59.904Z",
        "2024-07-11T08:57:00.705Z",
        "2024-07-11T09:53:05.129Z",
        "2024-07-11T13:34:57.427Z",
        "2024-07-11T16:34:26.100Z",
        "2024-07-12T07:45:34.091Z",
        "2024-07-12T13:17:19.244Z"
      ],
      "resume": [
        "2024-07-07T11:18:53.125Z",
        "2024-07-08T06:55:07.976Z",
        "2024-07-08T09:32:16.544Z",
        "2024-07-11T08:09:09.080Z",
        "2024-07-11T09:22:00.000Z",
        "2024-07-11T12:54:08.122Z",
        "2024-07-11T15:39:30.261Z",
        "2024-07-12T06:39:57.032Z",
        "2024-07-12T09:33:05.155Z",
        "2024-07-12T14:27:29.453Z"
      ],
      "end": "2024-07-12T15:26:42.277Z"
    },
    {
      "subject": "Fix app throwing full errors with stack listings when stopping an already stopped task or a task that hasn't been started",
      "begin": "2024-07-13T05:47:52.608Z",
      "end": "2024-07-13T06:00:21.532Z"
    },
    {
      "subject": "Edit tests testing error conditions so that they test that the error is not thrown with a stack listing",
      "begin": "2024-07-13T10:29:44.788Z",
      "end": "2024-07-13T10:34:51.514Z"
    },
    {
      "subject": "Modify functionality of the 'start' command so that it asks the user how to proceed in certain situations",
      "description": "Change the functionality of the 'start' command so that it first looks for unstarted tasks and confirms from the user that this is the correct task to start. If there are many unstarted tasks, user is asked which one of them to start. If there are no unstarted tasks, user is prompted for a task subject and current timestamp is offered as default subject. If task argument is provided, a task with a matching string as the subject is started, or if such task doesn't exist a new task is created with parameter value as the subject of the task. Before creation of the task, it is confirmed from the user that this is what was intended. If many tasks match with the descriptor, user is prompted which of them to start.",
      "begin": "2024-07-13T10:38:27.995Z",
      "suspend": [
        "2024-07-13T12:33:34.000Z",
        "2024-07-13T14:52:59.372Z",
        "2024-07-14T07:38:49.703Z",
        "2024-07-15T08:30:33.989Z",
        "2024-07-15T10:54:38.428Z",
        "2024-07-15T12:19:26.646Z",
        "2024-07-15T15:33:20.133Z",
        "2024-07-16T09:00:33.845Z"
      ],
      "resume": [
        "2024-07-13T13:36:34.237Z",
        "2024-07-14T06:20:02.782Z",
        "2024-07-15T06:33:15.743Z",
        "2024-07-15T09:15:33.989Z",
        "2024-07-15T11:45:23.284Z",
        "2024-07-15T14:49:57.848Z",
        "2024-07-16T06:41:52.795Z",
        "2024-07-16T10:25:24.410Z"
      ],
      "end": "2024-07-16T10:30:23.265Z"
    },
    {
      "subject": "Explore different prompt libraries",
      "begin": "2024-07-13T12:33:34.041Z",
      "end": "2024-07-13T13:03:34.141Z"
    },
    {
      "subject": "Modify functionality of the 'stop' command so that it asks the user how to proceed in certain situations",
      "description": "Change the functionality of the 'stop' command so that it first looks for active (started but not stopped) tasks and confirms from the user that this is the correct task to stop. If there are many active tasks, user is asked which one of them to stop. If there are no active tasks, the function still exits with error. If task argument is provided, a task with a matching string as the subject is stopped. Before stopping the task, it is confirmed from the user that it is what was intended. If many tasks match with the descriptor, user is prompted which of them to stop.",
      "begin": "2024-07-16T12:08:29.422Z",
      "suspend": [
        "2024-07-16T13:33:45.878Z",
        "2024-07-17T08:03:25.749Z",
        "2024-07-17T13:10:11.420Z"
      ],
      "resume": [
        "2024-07-17T07:18:20.192Z",
        "2024-07-17T11:17:20.963Z",
        "2024-07-18T09:33:50.858Z"
      ],
      "end": "2024-07-18T09:55:49.083Z"
    },
    {
      "subject": "Command 'status' prints current status report",
      "description": "Command 'status' lists currently active tasks with the time spent on each task so far, total amount of time spent on tasks, and number of complete and incomplete tasks.\n\nI tried to implement the task duration reporting using FormatJS's Intl.DurationFormat polyfill (https://formatjs.io/docs/polyfills/intl-durationformat), but I didn't get it to work. I then decided to look at the localization of the app later, and implement a simple duration formatting in English only for now.\n\nI refactored the tests into their own folder, and divided them into different files. I added integration and unit tests for testing the 'status' command and the calculateTimes() function.\n\nI spent a long time trying to figure out how to get child_process.execSync() to output full status command output in the integration tests. For some reason it seems to replace the contents of the list created using cli-table3 with ellipses. Thus it is impossible to test that the listed contents are correct. Because of this, I decided to implement a simple list formatting functionality into getTaskListString() function, that makes it possible to test the list content using execSync() in an integration test. Currently the simpler fornatting is selectable using the 'listMode' argument of the getTaskListString(). I will decide later whether to use cli-table3 or my own simpler table implementation. If cli-table3 is used, it must be ensured (e.g., with unit tests) that the list contents are what they should be.",
      "begin": "2024-07-18T10:07:15.029Z",
      "suspend": [
        "2024-07-18T10:51:07.177Z",
        "2024-07-19T07:54:11.409Z",
        "2024-07-19T10:49:19.875Z",
        "2024-07-19T11:59:21.255Z",
        "2024-07-20T08:24:10.941Z",
        "2024-07-20T12:10:10.330Z",
        "2024-07-21T08:06:38.457Z",
        "2024-07-22T06:05:32.734Z",
        "2024-07-22T08:14:07.870Z",
        "2024-07-22T11:58:59.607Z",
        "2024-07-22T15:24:32.015Z",
        "2024-07-23T08:15:05.789Z",
        "2024-07-23T10:22:21.278Z",
        "2024-07-27T06:11:00.158Z",
        "2024-07-27T07:49:05.814Z",
        "2024-07-28T04:08:18.832Z",
        "2024-07-28T08:27:19.316Z",
        "2024-07-29T04:13:28.663Z",
        "2024-07-29T07:01:06.496Z",
        "2024-07-29T10:12:11.962Z",
        "2024-07-29T15:37:52.885Z",
        "2024-07-30T07:03:50.131Z",
        "2024-07-30T08:23:38.539Z",
        "2024-07-30T11:33:21.911Z",
        "2024-07-30T13:04:46.601Z",
        "2024-07-31T04:01:24.412Z",
        "2024-07-31T08:40:09.611Z",
        "2024-07-31T09:14:32.070Z",
        "2024-07-31T12:59:55.644Z",
        "2024-08-01T04:15:48.785Z",
        "2024-08-01T05:34:41.322Z",
        "2024-08-01T07:59:32.716Z"
      ],
      "resume": [
        "2024-07-19T06:58:26.418Z",
        "2024-07-19T09:58:16.902Z",
        "2024-07-19T11:38:52.079Z",
        "2024-07-20T07:45:36.038Z",
        "2024-07-20T09:35:58.887Z",
        "2024-07-21T06:18:05.159Z",
        "2024-07-22T05:07:29.399Z",
        "2024-07-22T06:46:00.697Z",
        "2024-07-22T10:03:19.593Z",
        "2024-07-22T13:57:02.868Z",
        "2024-07-23T06:44:45.791Z",
        "2024-07-23T09:26:40.585Z",
        "2024-07-27T05:48:40.167Z",
        "2024-07-27T07:04:43.564Z",
        "2024-07-28T03:32:19.504Z",
        "2024-07-28T06:12:27.797Z",
        "2024-07-29T03:46:13.751Z",
        "2024-07-29T06:03:59.106Z",
        "2024-07-29T09:57:39.984Z",
        "2024-07-29T14:51:10.420Z",
        "2024-07-30T05:39:05.887Z",
        "2024-07-30T07:29:12.633Z",
        "2024-07-30T09:02:36.856Z",
        "2024-07-30T12:37:43.956Z",
        "2024-07-31T03:19:23.304Z",
        "2024-07-31T07:08:50.693Z",
        "2024-07-31T08:45:08.468Z",
        "2024-07-31T10:50:43.069Z",
        "2024-08-01T03:26:18.495Z",
        "2024-08-01T05:04:51.982Z",
        "2024-08-01T06:49:15.830Z",
        "2024-08-01T10:07:53.289Z"
      ],
      "end": "2024-08-01T10:58:27.928Z"
    },
    {
      "subject": "Explore the i18n library options",
      "begin": "2024-07-20T08:35:19.321Z",
      "suspend": ["2024-07-20T08:49:09.485Z"],
      "resume": ["2024-07-20T09:03:44.690Z"],
      "end": "2024-07-20T09:35:58.887Z"
    },
    {
      "subject": "Create unit tests for getTimeSheetData() and getTimeSheetPath()",
      "begin": "2024-07-29T07:01:06.496Z",
      "suspend": [
        "2024-07-29T07:57:48.473Z",
        "2024-07-29T09:57:39.984Z",
        "2024-07-29T12:04:34.110Z"
      ],
      "resume": [
        "2024-07-29T08:31:03.162Z",
        "2024-07-29T11:29:41.561Z",
        "2024-07-29T14:13:58.692Z"
      ],
      "end": "2024-07-29T14:51:10.420Z"
    },
    {
      "subject": "Fix calculateTimes() not testing if the suspend and resume fiedls are arrays or not",
      "begin": "2024-08-01T12:02:25.311Z",
      "end": "2024-08-01T12:13:18.433Z"
    },
    {
      "subject": "Add a test for testing that 'status' command gives a user friendly error message when there is a faulty time sheet file",
      "begin": "2024-08-02T03:25:24.894Z",
      "end": "2024-08-02T03:43:49.391Z"
    },
    {
      "subject": "Modify 'start' and 'stop' commands so that they report time sheet file errors in a user friendly manner",
      "description": "I created tests for testing that the file errors are handled and modified the functions so that the tests pass. I also removed the unnecessary 'ERROR:' marker from all error messages used with the ProjectClockError, and refactored the time sheet file read/write functions into the same file (time sheetReadWrite.ts).",
      "begin": "2024-08-02T03:44:31.810Z",
      "suspend": ["2024-08-02T04:15:34.062Z"],
      "resume": ["2024-08-02T05:28:37.452Z"],
      "end": "2024-08-02T07:39:04.467Z"
    },
    {
      "subject": "Add missing TSDoc comments, combine related functions in common directory into the same files when necessary and remove unnecessary functions",
      "begin": "2024-08-02T08:39:26.960Z",
      "suspend": ["2024-08-02T08:51:55.636Z"],
      "resume": ["2024-08-02T10:34:33.031Z"],
      "end": "2024-08-02T11:23:13.244Z"
    },
    {
      "subject": "Fix getTaskListString()'s simple rendering when the content is longer than column width",
      "begin": "2024-08-02T10:27:37.881Z",
      "end": "2024-08-02T10:34:33.031Z"
    },
    {
      "subject": "Modify 'status' command so that it reports the total time usage better when no time has been used",
      "description": "Create a test for testing that the command does not report total time usage when there is none and modify the code so that the test is passed.",
      "begin": "2024-08-02T11:40:10.534Z",
      "end": "2024-08-02T12:29:44.608Z"
    },
    {
      "subject": "Modify TimePeriod class so that the number of hours in a day and the number of days in a week or in a month can be customized",
      "description": "TimePeriod class is modified so that the way the larger units are calculated from the smaller units can be customized. For example the number of hours in a day can be set to the normal 24 or, for example, to the length of the workday. Number of days in a week can as well be set to the 7 of a calender week or to some other number, such as the length of the working week. The number of days in a month and the number of days in a year must also be customizable.",
      "begin": "2024-08-02T13:02:14.395Z",
      "suspend": [
        "2024-08-02T13:23:33.471Z",
        "2024-08-03T04:21:02.638Z",
        "2024-08-03T07:06:43.295Z",
        "2024-08-03T09:55:20.134Z",
        "2024-08-04T04:22:45.549Z",
        "2024-08-05T04:03:43.928Z",
        "2024-08-05T08:16:01.567Z",
        "2024-08-05T14:05:22.558Z"
      ],
      "resume": [
        "2024-08-03T04:04:33.050Z",
        "2024-08-03T05:19:04.600Z",
        "2024-08-03T09:17:33.785Z",
        "2024-08-04T03:19:41.569Z",
        "2024-08-05T03:50:24.675Z",
        "2024-08-05T07:08:58.941Z",
        "2024-08-05T08:41:15.380Z",
        "2024-08-06T05:22:02.149Z"
      ],
      "end": "2024-08-06T06:02:58.587Z"
    },
    {
      "subject": "Tasks can be listed",
      "description": "Implement list command and integration tests to test that it works as intended.",
      "begin": "2024-08-06T08:20:17.326Z",
      "suspend": [
        "2024-08-06T09:39:18.862Z",
        "2024-08-06T12:19:56.509Z",
        "2024-08-07T03:59:42.307Z"
      ],
      "resume": [
        "2024-08-06T10:47:05.872Z",
        "2024-08-07T03:41:17.710Z",
        "2024-08-07T05:02:52.651Z"
      ],
      "end": "2024-08-07T07:09:28.336Z"
    },
    {
      "subject": "Modify 'status' command so that it won't display additional days-hours-and-minutes string on total line, if total time spent is less than a day",
      "begin": "2024-08-07T07:48:00.394Z",
      "end": "2024-08-07T08:01:16.829Z"
    },
    {
      "subject": "Time unit conversion parameters are read from the time sheet file",
      "description": "Time unit conversion parameters can be written into the time sheet file and if they are in the time sheet they will override default parameters.",
      "begin": "2024-08-07T09:11:45.688Z",
      "suspend": [
        "2024-08-07T10:54:03.976Z",
        "2024-08-07T11:20:10.556Z",
        "2024-08-07T12:52:55.619Z"
      ],
      "resume": [
        "2024-08-07T10:54:03.976Z",
        "2024-08-07T11:28:48.560Z",
        "2024-08-08T03:17:54.458Z"
      ],
      "end": "2024-08-08T03:52:08.788Z"
    },
    {
      "subject": "Task can be suspended and resumed (paused and unpaused)",
      "notes": "Making 'start' and 'stop' commands' code clearer, making it use common functions better and function better in general took a long time; almost 13 hours.",
      "begin": "2024-08-08T04:59:14.597Z",
      "suspend": [
        "2024-08-08T05:36:41.560Z",
        "2024-08-09T06:44:14.338Z",
        "2024-08-09T08:10:37.866Z",
        "2024-08-09T11:37:49.006Z",
        "2024-08-09T13:09:30.777Z",
        "2024-08-09T15:24:23.355Z",
        "2024-08-10T03:18:20.860Z",
        "2024-08-10T07:14:26.971Z",
        "2024-08-10T08:18:27.699Z",
        "2024-08-10T12:27:44.904Z"
      ],
      "resume": [
        "2024-08-09T05:05:54.041Z",
        "2024-08-09T07:18:38.768Z",
        "2024-08-09T09:19:21.720Z",
        "2024-08-09T12:21:17.592Z",
        "2024-08-09T14:00:56.711Z",
        "2024-08-10T02:51:14.988Z",
        "2024-08-10T05:29:01.663Z",
        "2024-08-10T07:45:47.565Z",
        "2024-08-10T09:32:44.607Z"
      ]
    },
    {
      "subject": "Make the operation of 'start' and 'stop' command clearer",
      "description": "Edit command descriptions and prompts of 'start' and 'stop' commands to be clearer.",
      "notes": "After adding one more inquirer step to the command, the previous method of passing answers to inquirer questions didn't work anymore. I had to create a new function execute() that uses child_process.exec() instead of child_process.execSync(), and it took a while to learn how to use the asynchronous version of the function.",
      "begin": "2024-08-08T05:36:41.560Z",
      "suspend": ["2024-08-08T07:36:48.845Z", "2024-08-08T13:12:33.365Z"],
      "resume": ["2024-08-08T10:05:37.786Z", "2024-08-09T03:18:26.212Z"],
      "end": "2024-08-09T03:53:48.720Z"
    },
    {
      "subject": "Add a 'script mode' flag that prevents all commands from prompting the user for instructions"
    },
    {
      "subject": "Time sheet file can be selected"
    },
    {
      "subject": "Modify 'new' command so that it uses the name of the parent directory as the default value for project name"
    },
    {
      "subject": "Update README.md and command descriptions"
    },
    {
      "subject": "Try adding colors to getTaskListString()'s simple rendering and see if that affects the output from child_process.execSync()",
      "description": "I had to create a simpler list rendering function because the output from cli-table3 was truncated when the app was ran using child_process.execSync() in integration tests. If I can modify the simpler rendering method to add color to the lists, I could remove cli-table3 from the project and just use my own list rendering function."
    },
    {
      "subject": "Tasks can be added without starting the clock"
    },
    {
      "subject": "Subject and description of a task can be set and edited"
    },
    {
      "subject": "A new project time sheet can be created by starting the clock"
    },
    {
      "subject": "Modify calculateTimes() so that it creates a list of times spent for each day"
    },
    {
      "subject": "Modify the status command so that it prints how many hours of work have been done in the current day"
    },
    {
      "subject": "Modify the commands so that user is asked which time sheet to use if there are more than one time sheet in the directory "
    },
    {
      "subject": "Command 'new' prompts for project name if it is not given as an argument",
      "description": "Create tests for testing the new functionality and edit the code so that the tests are passed. Default value for the project name is the name of the parent directory."
    },
    {
      "subject": "Time unit conversion parameters can be changed with a command option"
    },
    {
      "subject": "Add a command that visually shows the times when the work has been done"
    },
    {
      "subject": "Task list editing",
      "description": "All time used for editing the task list.",
      "begin": "2024-08-01T11:10:17.959Z",
      "suspend": [
        "2024-08-01T12:01:52.258Z",
        "2024-08-02T08:56:08.904Z",
        "2024-08-06T06:17:11.133Z",
        "2024-08-06T07:45:34.455Z",
        "2024-08-07T08:25:30.572Z"
      ],
      "resume": [
        "2024-08-02T08:51:55.636Z",
        "2024-08-06T06:02:58.587Z",
        "2024-08-06T07:36:34.862Z",
        "2024-08-07T08:07:36.600Z"
      ]
    }
  ]
}
