{
  "projectName": "project-clock",
  "projectSettings": {
    "timeParams": {
      "day": 8,
      "week": 5,
      "month": 20,
      "year": 260
    }
  },
  "tasks": [
    {
      "subject": "Study how TypeScript CLI apps are created and tested",
      "begin": "2024-07-02T06:00:00.000Z",
      "end": "2024-07-02T13:41:29.355Z"
    },
    {
      "subject": "Initialize the project",
      "description": "Initialize the project with TypeScript, Rollup, ESLint and Prettier.",
      "begin": "2024-07-03T06:22:45.639Z",
      "suspend": [
        "2024-07-03T08:06:02.271Z",
        "2024-07-03T09:20:11.637Z",
        "2024-07-03T11:11:14.768Z",
        "2024-07-03T13:10:42.887Z",
        "2024-07-03T15:25:20.927Z",
        "2024-07-04T07:50:57.098Z"
      ],
      "resume": [
        "2024-07-03T09:06:03.898Z",
        "2024-07-03T10:19:18.605Z",
        "2024-07-03T11:53:28.636Z",
        "2024-07-03T14:24:19.721Z",
        "2024-07-04T06:58:41.201Z",
        "2024-07-04T08:50:22.239Z"
      ],
      "end": "2024-07-04T09:25:16.616Z"
    },
    {
      "subject": "Create a test to test that the app prints it's name with the current version when it is run from the command line",
      "description": "Add and configure jest, create the test using node:child_process.execSync(), and edit pclock.ts so that the test is passed.",
      "begin": "2024-07-04T09:30:12.422Z",
      "end": "2024-07-04T10:52:50.982Z"
    },
    {
      "subject": "Designing the basic structure of the application a little",
      "description": "Going through and editing the previous README.md.",
      "begin": "2024-07-04T11:18:05.231Z",
      "suspend": [
        "2024-07-04T12:24:24.647Z",
        "2024-07-05T06:57:48.681Z",
        "2024-07-05T08:37:35.161Z"
      ],
      "resume": [
        "2024-07-05T06:26:30.508Z",
        "2024-07-05T07:24:39.927Z",
        "2024-07-05T09:05:20.602Z"
      ],
      "end": "2024-07-05T10:21:33.749Z"
    },
    {
      "subject": "A new project timesheet can be created",
      "description": "Create tests for testing that the command 'new' works and edit the code so that the tests are passed. Use the commander library for the implementation and study how the library is used. Previous test for argumentless call had to be rewritten too.",
      "begin": "2024-07-05T10:24:35.655Z",
      "suspend": [
        "2024-07-05T12:48:14.935Z",
        "2024-07-06T08:26:23.033Z"
      ],
      "resume": [
        "2024-07-06T05:42:52.001Z",
        "2024-07-06T08:45:43.944Z"
      ],
      "end": "2024-07-06T12:24:58.481Z"
    },
    {
      "subject": "Clock can be started and stopped",
      "description": "Create tests for testing the new functionality and edit the code so that the tests are passed.\n'Start' command without any arguments creates a new task with current timestamp as 'subject' and 'begin' value. If the task descriptor (regexp matcher) is passed as an argument, a task is created with this string as 'subject' and current timestamp as the 'begin' value. Command exits with an error if the task already exists.\n'Stop' command without any arguments stops an active (started but not stopped) task if there is only one of such tasks, by setting the 'end' value of the task to current timestamp. 'Stop' with a task descriptor as argument stops a task with matching 'subject'. If the descriptor matches more than one task, command returns with an error.",
      "begin": "2024-07-07T07:54:44.918Z",
      "suspend": [
        "2024-07-07T08:02:21.348Z",
        "2024-07-07T11:56:39.640Z",
        "2024-07-08T08:19:43.315Z",
        "2024-07-08T15:00:59.904Z",
        "2024-07-11T08:57:00.705Z",
        "2024-07-11T09:53:05.129Z",
        "2024-07-11T13:34:57.427Z",
        "2024-07-11T16:34:26.100Z",
        "2024-07-12T07:45:34.091Z",
        "2024-07-12T13:17:19.244Z"
      ],
      "resume": [
        "2024-07-07T11:18:53.125Z",
        "2024-07-08T06:55:07.976Z",
        "2024-07-08T09:32:16.544Z",
        "2024-07-11T08:09:09.080Z",
        "2024-07-11T09:22:00.000Z",
        "2024-07-11T12:54:08.122Z",
        "2024-07-11T15:39:30.261Z",
        "2024-07-12T06:39:57.032Z",
        "2024-07-12T09:33:05.155Z",
        "2024-07-12T14:27:29.453Z"
      ],
      "end": "2024-07-12T15:26:42.277Z"
    },
    {
      "subject": "Fix app throwing full errors with stack listings when stopping an already stopped task or a task that hasn't been started",
      "begin": "2024-07-13T05:47:52.608Z",
      "end": "2024-07-13T06:00:21.532Z"
    },
    {
      "subject": "Edit tests testing error conditions so that they test that the error is not thrown with a stack listing",
      "begin": "2024-07-13T10:29:44.788Z",
      "end": "2024-07-13T10:34:51.514Z"
    },
    {
      "subject": "Modify functionality of the 'start' command so that it asks the user how to proceed in certain situations",
      "description": "Change the functionality of the 'start' command so that it first looks for unstarted tasks and confirms from the user that this is the correct task to start. If there are many unstarted tasks, user is asked which one of them to start. If there are no unstarted tasks, user is prompted for a task subject and current timestamp is offered as default subject. If task argument is provided, a task with a matching string as the subject is started, or if such task doesn't exist a new task is created with parameter value as the subject of the task. Before creation of the task, it is confirmed from the user that this is what was intended. If many tasks match with the descriptor, user is prompted which of them to start.",
      "begin": "2024-07-13T10:38:27.995Z",
      "suspend": [
        "2024-07-13T12:33:34.000Z",
        "2024-07-13T14:52:59.372Z",
        "2024-07-14T07:38:49.703Z",
        "2024-07-15T08:30:33.989Z",
        "2024-07-15T10:54:38.428Z",
        "2024-07-15T12:19:26.646Z",
        "2024-07-15T15:33:20.133Z",
        "2024-07-16T09:00:33.845Z"
      ],
      "resume": [
        "2024-07-13T13:36:34.237Z",
        "2024-07-14T06:20:02.782Z",
        "2024-07-15T06:33:15.743Z",
        "2024-07-15T09:15:33.989Z",
        "2024-07-15T11:45:23.284Z",
        "2024-07-15T14:49:57.848Z",
        "2024-07-16T06:41:52.795Z",
        "2024-07-16T10:25:24.410Z"
      ],
      "end": "2024-07-16T10:30:23.265Z"
    },
    {
      "subject": "Explore different prompt libraries",
      "begin": "2024-07-13T12:33:34.041Z",
      "end": "2024-07-13T13:03:34.141Z"
    },
    {
      "subject": "Modify functionality of the 'stop' command so that it asks the user how to proceed in certain situations",
      "description": "Change the functionality of the 'stop' command so that it first looks for active (started but not stopped) tasks and confirms from the user that this is the correct task to stop. If there are many active tasks, user is asked which one of them to stop. If there are no active tasks, the function still exits with error. If task argument is provided, a task with a matching string as the subject is stopped. Before stopping the task, it is confirmed from the user that it is what was intended. If many tasks match with the descriptor, user is prompted which of them to stop.",
      "begin": "2024-07-16T12:08:29.422Z",
      "suspend": [
        "2024-07-16T13:33:45.878Z",
        "2024-07-17T08:03:25.749Z",
        "2024-07-17T13:10:11.420Z"
      ],
      "resume": [
        "2024-07-17T07:18:20.192Z",
        "2024-07-17T11:17:20.963Z",
        "2024-07-18T09:33:50.858Z"
      ],
      "end": "2024-07-18T09:55:49.083Z"
    },
    {
      "subject": "Command 'status' prints current status report",
      "description": "Command 'status' lists currently active tasks with the time spent on each task so far, total amount of time spent on tasks, and number of complete and incomplete tasks.\nI tried to implement the task duration reporting using FormatJS's Intl.DurationFormat polyfill (https://formatjs.io/docs/polyfills/intl-durationformat), but I didn't get it to work. I then decided to look at the localization of the app later, and implement a simple duration formatting in English only for now.\nI refactored the tests into their own folder, and divided them into different files. I added integration and unit tests for testing the 'status' command and the calculateTimes() function.\nI spent a long time trying to figure out how to get child_process.execSync() to output full status command output in the integration tests. For some reason it seems to replace the contents of the list created using cli-table3 with ellipses. Thus it is impossible to test that the listed contents are correct. Because of this, I decided to implement a simple list formatting functionality into getTaskListString() function, that makes it possible to test the list content using execSync() in an integration test. Currently the simpler fornatting is selectable using the 'listMode' argument of the getTaskListString(). I will decide later whether to use cli-table3 or my own simpler table implementation. If cli-table3 is used, it must be ensured (e.g., with unit tests) that the list contents are what they should be.",
      "begin": "2024-07-18T10:07:15.029Z",
      "suspend": [
        "2024-07-18T10:51:07.177Z",
        "2024-07-19T07:54:11.409Z",
        "2024-07-19T10:49:19.875Z",
        "2024-07-19T11:59:21.255Z",
        "2024-07-20T08:24:10.941Z",
        "2024-07-20T12:10:10.330Z",
        "2024-07-21T08:06:38.457Z",
        "2024-07-22T06:05:32.734Z",
        "2024-07-22T08:14:07.870Z",
        "2024-07-22T11:58:59.607Z",
        "2024-07-22T15:24:32.015Z",
        "2024-07-23T08:15:05.789Z",
        "2024-07-23T10:22:21.278Z",
        "2024-07-27T06:11:00.158Z",
        "2024-07-27T07:49:05.814Z",
        "2024-07-28T04:08:18.832Z",
        "2024-07-28T08:27:19.316Z",
        "2024-07-29T04:13:28.663Z",
        "2024-07-29T07:01:06.496Z",
        "2024-07-29T10:12:11.962Z",
        "2024-07-29T15:37:52.885Z",
        "2024-07-30T07:03:50.131Z",
        "2024-07-30T08:23:38.539Z",
        "2024-07-30T11:33:21.911Z",
        "2024-07-30T13:04:46.601Z",
        "2024-07-31T04:01:24.412Z",
        "2024-07-31T08:40:09.611Z",
        "2024-07-31T09:14:32.070Z",
        "2024-07-31T12:59:55.644Z",
        "2024-08-01T04:15:48.785Z",
        "2024-08-01T05:34:41.322Z",
        "2024-08-01T07:59:32.716Z"
      ],
      "resume": [
        "2024-07-19T06:58:26.418Z",
        "2024-07-19T09:58:16.902Z",
        "2024-07-19T11:38:52.079Z",
        "2024-07-20T07:45:36.038Z",
        "2024-07-20T09:35:58.887Z",
        "2024-07-21T06:18:05.159Z",
        "2024-07-22T05:07:29.399Z",
        "2024-07-22T06:46:00.697Z",
        "2024-07-22T10:03:19.593Z",
        "2024-07-22T13:57:02.868Z",
        "2024-07-23T06:44:45.791Z",
        "2024-07-23T09:26:40.585Z",
        "2024-07-27T05:48:40.167Z",
        "2024-07-27T07:04:43.564Z",
        "2024-07-28T03:32:19.504Z",
        "2024-07-28T06:12:27.797Z",
        "2024-07-29T03:46:13.751Z",
        "2024-07-29T06:03:59.106Z",
        "2024-07-29T09:57:39.984Z",
        "2024-07-29T14:51:10.420Z",
        "2024-07-30T05:39:05.887Z",
        "2024-07-30T07:29:12.633Z",
        "2024-07-30T09:02:36.856Z",
        "2024-07-30T12:37:43.956Z",
        "2024-07-31T03:19:23.304Z",
        "2024-07-31T07:08:50.693Z",
        "2024-07-31T08:45:08.468Z",
        "2024-07-31T10:50:43.069Z",
        "2024-08-01T03:26:18.495Z",
        "2024-08-01T05:04:51.982Z",
        "2024-08-01T06:49:15.830Z",
        "2024-08-01T10:07:53.289Z"
      ],
      "end": "2024-08-01T10:58:27.928Z"
    },
    {
      "subject": "Explore the i18n library options",
      "begin": "2024-07-20T08:35:19.321Z",
      "suspend": [
        "2024-07-20T08:49:09.485Z"
      ],
      "resume": [
        "2024-07-20T09:03:44.690Z"
      ],
      "end": "2024-07-20T09:35:58.887Z"
    },
    {
      "subject": "Create unit tests for getTimesheetData() and getTimesheetPath()",
      "begin": "2024-07-29T07:01:06.496Z",
      "suspend": [
        "2024-07-29T07:57:48.473Z",
        "2024-07-29T09:57:39.984Z",
        "2024-07-29T12:04:34.110Z"
      ],
      "resume": [
        "2024-07-29T08:31:03.162Z",
        "2024-07-29T11:29:41.561Z",
        "2024-07-29T14:13:58.692Z"
      ],
      "end": "2024-07-29T14:51:10.420Z"
    },
    {
      "subject": "Fix calculateTimes() not testing if the suspend and resume fiedls are arrays or not",
      "begin": "2024-08-01T12:02:25.311Z",
      "end": "2024-08-01T12:13:18.433Z"
    },
    {
      "subject": "Add a test for testing that 'status' command gives a user friendly error message when there is a faulty timesheet file",
      "begin": "2024-08-02T03:25:24.894Z",
      "end": "2024-08-02T03:43:49.391Z"
    },
    {
      "subject": "Modify 'start' and 'stop' commands so that they report timesheet file errors in a user friendly manner",
      "description": "I created tests for testing that the file errors are handled and modified the functions so that the tests pass. I also removed the unnecessary 'ERROR:' marker from all error messages used with the ProjectClockError, and refactored the timesheet file read/write functions into the same file (timesheetReadWrite.ts).",
      "begin": "2024-08-02T03:44:31.810Z",
      "suspend": [
        "2024-08-02T04:15:34.062Z"
      ],
      "resume": [
        "2024-08-02T05:28:37.452Z"
      ],
      "end": "2024-08-02T07:39:04.467Z"
    },
    {
      "subject": "Fix getTaskListString()'s simple rendering when the content is longer than column width",
      "begin": "2024-08-02T10:27:37.881Z",
      "end": "2024-08-02T10:34:33.031Z"
    },
    {
      "subject": "Modify 'status' command so that it reports the total time usage better when no time has been used",
      "description": "Create a test for testing that the command does not report total time usage when there is none and modify the code so that the test is passed.",
      "begin": "2024-08-02T11:40:10.534Z",
      "end": "2024-08-02T12:29:44.608Z"
    },
    {
      "subject": "Modify TimePeriod class so that the number of hours in a day and the number of days in a week or in a month can be customized",
      "description": "TimePeriod class is modified so that the way the larger units are calculated from the smaller units can be customized. For example the number of hours in a day can be set to the normal 24 or, for example, to the length of the workday. Number of days in a week can as well be set to the 7 of a calender week or to some other number, such as the length of the working week. The number of days in a month and the number of days in a year must also be customizable.",
      "begin": "2024-08-02T13:02:14.395Z",
      "suspend": [
        "2024-08-02T13:23:33.471Z",
        "2024-08-03T04:21:02.638Z",
        "2024-08-03T07:06:43.295Z",
        "2024-08-03T09:55:20.134Z",
        "2024-08-04T04:22:45.549Z",
        "2024-08-05T04:03:43.928Z",
        "2024-08-05T08:16:01.567Z",
        "2024-08-05T14:05:22.558Z"
      ],
      "resume": [
        "2024-08-03T04:04:33.050Z",
        "2024-08-03T05:19:04.600Z",
        "2024-08-03T09:17:33.785Z",
        "2024-08-04T03:19:41.569Z",
        "2024-08-05T03:50:24.675Z",
        "2024-08-05T07:08:58.941Z",
        "2024-08-05T08:41:15.380Z",
        "2024-08-06T05:22:02.149Z"
      ],
      "end": "2024-08-06T06:02:58.587Z"
    },
    {
      "subject": "Tasks can be listed",
      "description": "Implement list command and integration tests to test that it works as intended.",
      "begin": "2024-08-06T08:20:17.326Z",
      "suspend": [
        "2024-08-06T09:39:18.862Z",
        "2024-08-06T12:19:56.509Z",
        "2024-08-07T03:59:42.307Z"
      ],
      "resume": [
        "2024-08-06T10:47:05.872Z",
        "2024-08-07T03:41:17.710Z",
        "2024-08-07T05:02:52.651Z"
      ],
      "end": "2024-08-07T07:09:28.336Z"
    },
    {
      "subject": "Modify 'status' command so that it won't display additional days-hours-and-minutes string on total line, if total time spent is less than a day",
      "begin": "2024-08-07T07:48:00.394Z",
      "end": "2024-08-07T08:01:16.829Z"
    },
    {
      "subject": "Time unit conversion parameters are read from the timesheet file",
      "description": "Time unit conversion parameters can be written into the timesheet file and if they are in the timesheet they will override default parameters.",
      "begin": "2024-08-07T09:11:45.688Z",
      "suspend": [
        "2024-08-07T10:54:03.976Z",
        "2024-08-07T11:20:10.556Z",
        "2024-08-07T12:52:55.619Z"
      ],
      "resume": [
        "2024-08-07T10:54:03.976Z",
        "2024-08-07T11:28:48.560Z",
        "2024-08-08T03:17:54.458Z"
      ],
      "end": "2024-08-08T03:52:08.788Z"
    },
    {
      "subject": "Task can be suspended and resumed (paused and unpaused)",
      "notes": "Making 'start' and 'stop' commands' code clearer, making them use common functions better and function better in general took an unreasonably long time; about 14 hours (+ 5h 42min in a separate task). I think, however, that it was worth it. Now all the commands use a fairly simple and clear, similar structure.",
      "begin": "2024-08-08T04:59:14.597Z",
      "suspend": [
        "2024-08-08T05:36:41.560Z",
        "2024-08-09T06:44:14.338Z",
        "2024-08-09T08:10:37.866Z",
        "2024-08-09T11:37:49.006Z",
        "2024-08-09T13:09:30.777Z",
        "2024-08-09T15:24:23.355Z",
        "2024-08-10T03:18:20.860Z",
        "2024-08-10T07:14:26.971Z",
        "2024-08-10T08:18:27.699Z",
        "2024-08-10T12:27:44.904Z",
        "2024-08-11T04:16:58.706Z",
        "2024-08-11T08:11:09.528Z",
        "2024-08-11T12:51:37.607Z",
        "2024-08-12T08:02:49.909Z",
        "2024-08-12T12:50:31.101Z",
        "2024-08-13T03:34:07.699Z",
        "2024-08-13T04:06:02.987Z",
        "2024-08-13T06:30:39.156Z",
        "2024-08-13T11:01:03.368Z",
        "2024-08-13T14:25:07.848Z",
        "2024-08-14T04:15:09.588Z",
        "2024-08-14T06:09:29.562Z",
        "2024-08-14T08:17:21.476Z",
        "2024-08-14T13:45:06.487Z",
        "2024-08-15T04:19:39.157Z",
        "2024-08-15T07:04:25.093Z",
        "2024-08-15T10:42:02.937Z"
      ],
      "resume": [
        "2024-08-09T05:05:54.041Z",
        "2024-08-09T07:18:38.768Z",
        "2024-08-09T09:19:21.720Z",
        "2024-08-09T12:21:17.592Z",
        "2024-08-09T14:00:56.711Z",
        "2024-08-10T02:51:14.988Z",
        "2024-08-10T05:29:01.663Z",
        "2024-08-10T07:45:47.565Z",
        "2024-08-10T09:32:44.607Z",
        "2024-08-11T02:59:16.988Z",
        "2024-08-11T06:00:11.149Z",
        "2024-08-11T12:29:16.306Z",
        "2024-08-12T07:30:20.836Z",
        "2024-08-12T10:36:36.151Z",
        "2024-08-13T03:21:14.883Z",
        "2024-08-13T03:40:42.244Z",
        "2024-08-13T05:32:41.970Z",
        "2024-08-13T08:50:43.795Z",
        "2024-08-13T13:41:17.672Z",
        "2024-08-14T03:18:30.364Z",
        "2024-08-14T05:22:10.072Z",
        "2024-08-14T07:48:40.567Z",
        "2024-08-14T10:12:14.398Z",
        "2024-08-15T03:19:46.899Z",
        "2024-08-15T05:34:10.661Z",
        "2024-08-15T08:41:55.575Z",
        "2024-08-16T03:49:33.009Z"
      ],
      "end": "2024-08-16T03:49:33.009Z"
    },
    {
      "subject": "Make the operation of 'start' and 'stop' command clearer",
      "description": "Edit command descriptions and prompts of 'start' and 'stop' commands to be clearer.",
      "notes": "After adding one more inquirer step to the command, the previous method of passing answers to inquirer questions in tests didn't work anymore. In addition to changing the operation of the commands, I had to create a new function execute() to make the tests work. It uses child_process.exec() instead of child_process.execSync(), and it took a while to learn how to use the asynchronous version of the function.",
      "begin": "2024-08-08T05:36:41.560Z",
      "suspend": [
        "2024-08-08T07:36:48.845Z",
        "2024-08-08T13:12:33.365Z"
      ],
      "resume": [
        "2024-08-08T10:05:37.786Z",
        "2024-08-09T03:18:26.212Z"
      ],
      "end": "2024-08-09T03:53:48.720Z"
    },
    {
      "subject": "Rearrange tests for clarity",
      "begin": "2024-08-12T08:02:49.909Z",
      "suspend": [
        "2024-08-12T09:19:19.186Z"
      ],
      "resume": [
        "2024-08-12T10:24:12.064Z"
      ],
      "end": "2024-08-12T10:36:36.151Z"
    },
    {
      "subject": "Verify that there are tests for testing that commands filter the tasks correctly",
      "description": "Most of the commands allow operation without specifying the specific task with a task descriptor and even the task descriptor can match to many tasks. User is then sometimes presented with several options. It should be verified that the commands are presenting the user only correct tasks, i.e., the tasks are filtered correctly.",
      "begin": "2024-08-17T03:20:38.413Z",
      "suspend": [
        "2024-08-17T04:24:23.107Z",
        "2024-08-18T06:55:29.100Z",
        "2024-08-18T08:25:41.690Z",
        "2024-08-18T08:39:00.653Z"
      ],
      "resume": [
        "2024-08-18T05:50:18.651Z",
        "2024-08-18T07:27:29.103Z",
        "2024-08-18T08:26:58.952Z",
        "2024-08-18T09:56:17.451Z"
      ],
      "end": "2024-08-18T10:19:19.939Z"
    },
    {
      "subject": "Change task status 'not started' to 'unstarted'",
      "begin": "2024-08-19T09:35:38.537Z",
      "suspend": [
        "2024-08-19T09:42:56.690Z",
        "2024-08-19T09:51:04.461Z"
      ],
      "resume": [
        "2024-08-19T09:46:34.210Z",
        "2024-08-19T10:08:25.601Z"
      ],
      "end": "2024-08-19T10:08:25.601Z"
    },
    {
      "subject": "Rename TaskType as TaskStateType",
      "begin": "2024-08-19T10:41:03.784Z",
      "end": "2024-08-19T10:47:37.389Z"
    },
    {
      "subject": "Tasks can be added without starting the clock",
      "begin": "2024-08-19T11:59:26.766Z",
      "suspend": [
        "2024-08-19T12:08:16.825Z",
        "2024-08-19T12:47:19.773Z",
        "2024-08-20T04:01:29.303Z",
        "2024-08-20T06:31:08.764Z",
        "2024-08-20T07:20:18.621Z",
        "2024-08-20T08:14:02.774Z",
        "2024-08-20T09:13:40.082Z",
        "2024-08-20T09:22:22.204Z"
      ],
      "resume": [
        "2024-08-19T12:40:02.624Z",
        "2024-08-20T03:18:47.838Z",
        "2024-08-20T06:11:07.653Z",
        "2024-08-20T07:15:03.721Z",
        "2024-08-20T07:34:32.882Z",
        "2024-08-20T09:13:40.082Z",
        "2024-08-20T09:14:29.294Z",
        "2024-08-20T09:22:47.261Z"
      ],
      "end": "2024-08-20T09:22:47.261Z"
    },
    {
      "subject": "Make error reporting testing consistent in integration tests",
      "begin": "2024-08-20T09:45:50.426Z",
      "suspend": [
        "2024-08-20T11:38:40.449Z"
      ],
      "resume": [
        "2024-08-20T11:39:32.078Z"
      ],
      "end": "2024-08-20T11:48:47.585Z"
    },
    {
      "subject": "Modify the 'new' command so that it uses the name of the parent directory as the default value for project name and prompts the user for confirmation",
      "begin": "2024-08-20T11:54:05.530Z",
      "suspend": [
        "2024-08-20T12:48:51.857Z",
        "2024-08-20T13:19:31.511Z",
        "2024-08-20T14:47:02.174Z"
      ],
      "resume": [
        "2024-08-20T12:59:35.289Z",
        "2024-08-20T14:01:51.828Z",
        "2024-08-21T03:34:06.478Z"
      ],
      "end": "2024-08-21T04:03:00.447Z"
    },
    {
      "subject": "Remove contractions from prompts and messages (e.g., can't to cannot)",
      "begin": "2024-08-21T09:41:23.206Z",
      "end": "2024-08-21T10:03:03.294Z"
    },
    {
      "subject": "Full task data (full subject, description and notes texts) can be displayed",
      "notes": "I first created the 'show' command, and added the tests later. I also made the faultyTask() function on userFriendlyErrorMessages.ts to use execute() from childProcessExecutor.ts, which made the function async. Because of this, I had to change the use of that function in other integration test suites. While doing that, I also added expect.hasAssertions() to all tests that are based on the functions on userFriendlyErrorMessages.ts.",
      "begin": "2024-08-21T10:14:08.040Z",
      "suspend": [
        "2024-08-21T10:47:32.209Z",
        "2024-08-21T11:52:15.780Z",
        "2024-08-21T13:26:01.959Z",
        "2024-08-21T15:26:57.667Z",
        "2024-08-22T04:06:07.388Z",
        "2024-08-22T07:53:00.486Z",
        "2024-08-22T10:08:19.040Z",
        "2024-08-22T11:18:21.249Z",
        "2024-08-23T13:05:40.602Z",
        "2024-08-23T15:19:06.848Z",
        "2024-08-24T03:24:57.295Z",
        "2024-08-24T04:21:08.479Z",
        "2024-08-24T06:26:36.964Z",
        "2024-08-25T04:32:19.769Z",
        "2024-08-25T06:26:09.660Z",
        "2024-08-25T08:07:39.571Z",
        "2024-08-25T16:32:06.959Z",
        "2024-08-26T04:16:05.981Z",
        "2024-08-26T05:42:53.538Z",
        "2024-08-26T07:26:22.800Z",
        "2024-08-26T07:47:10.466Z",
        "2024-08-26T11:26:33.619Z",
        "2024-08-26T12:27:04.313Z",
        "2024-08-26T15:55:04.327Z"
      ],
      "resume": [
        "2024-08-21T11:14:03.853Z",
        "2024-08-21T12:32:43.104Z",
        "2024-08-21T14:42:12.840Z",
        "2024-08-22T03:36:07.124Z",
        "2024-08-22T05:54:50.486Z",
        "2024-08-22T08:41:54.564Z",
        "2024-08-22T10:16:02.502Z",
        "2024-08-23T09:08:51.159Z",
        "2024-08-23T14:50:30.321Z",
        "2024-08-24T02:08:15.077Z",
        "2024-08-24T03:33:36.679Z",
        "2024-08-24T04:50:32.375Z",
        "2024-08-25T03:30:43.014Z",
        "2024-08-25T05:31:31.045Z",
        "2024-08-25T06:29:47.367Z",
        "2024-08-25T15:22:42.505Z",
        "2024-08-26T03:19:19.806Z",
        "2024-08-26T05:12:36.162Z",
        "2024-08-26T06:36:35.161Z",
        "2024-08-26T07:34:32.319Z",
        "2024-08-26T11:14:31.690Z",
        "2024-08-26T11:33:20.464Z",
        "2024-08-26T15:22:55.905Z",
        "2024-08-27T12:02:51.546Z"
      ],
      "end": "2024-08-27T12:31:37.135Z"
    },
    {
      "subject": "Fix a test outputting unnecessarily to stdout",
      "begin": "2024-08-21T11:01:35.044Z",
      "end": "2024-08-21T11:10:37.264Z"
    },
    {
      "subject": "Fix padding in simple table rendering",
      "description": "Currently, no (right) padding is used if the text is exactly the length of the cell width.",
      "notes": "There actually isn't explicit cell padding in the implementation. The contents were truncated if they were longer than the cell width and the last four characters were replaced with an ellipsis and a whitespace. I changed the code so that the content is truncated if it is longer than cell width - 1.",
      "begin": "2024-08-22T11:50:19.413Z",
      "end": "2024-08-22T12:30:37.608Z"
    },
    {
      "subject": "Try adding colors to getTaskListString()'s simple rendering and see if that affects the output from child_process.execSync()",
      "description": "I had to create a simpler list rendering function because the output from cli-table3 was truncated when the app was ran using child_process.execSync() in integration tests. If I can modify the simpler rendering method to add color to the lists, I could remove cli-table3 from the project and just use my own list rendering function.",
      "notes": "Adding colors to output with ANSI escape codes seems to be possible in a testable way. A library called pretty-ansi (https://github.com/mrazauskas/pretty-ansi) can also help with testing the output.",
      "begin": "2024-08-23T05:43:38.361Z",
      "end": "2024-08-23T07:23:52.981Z"
    },
    {
      "subject": "Remove cli-table3 dependency from the project and add color to the output functions",
      "description": "Since the simple table implementation does the job just as well as cli-table3, the latter should be removed from the project. Also, since the colors can easily be added to the output functions in a testable way, the output functions should be refactored as a slightly more general framework that allows colors to be added to the outputs in a consistent way.",
      "notes": "No-color option/flag (--no-color) removes colors and formatting from Project Clock functions, but not from the Inquirer prompts. Inquerer developers say it uses chalk for the coloring, and that --no-color should work (https://github.com/SBoudrias/Inquirer.js/issues/200). Maybe that has changed or something in my code is preventing the Inquirer from getting the argument. Using environment variable FORCE_COLOR, however, works.\nWhile rearranging functions, I also changed the naming of the types related to task statuses in calculateTimes.ts. The TaskStatus is now representing simply the status of a task. The former TaskStatus interface, which is used as the return value of calculateTimes() function, is now called TaskStatusInformation.",
      "begin": "2024-08-28T03:34:08.351Z",
      "suspend": [
        "2024-08-28T04:00:33.447Z",
        "2024-08-28T06:19:59.920Z",
        "2024-08-28T08:32:34.970Z",
        "2024-08-28T11:00:25.219Z",
        "2024-08-28T13:08:40.693Z",
        "2024-08-29T03:55:51.805Z",
        "2024-08-29T07:21:23.464Z",
        "2024-08-29T10:02:35.126Z",
        "2024-08-29T13:45:50.082Z",
        "2024-08-30T04:11:01.844Z",
        "2024-08-30T06:10:17.658Z",
        "2024-08-30T07:06:36.168Z",
        "2024-08-30T13:10:45.241Z",
        "2024-08-30T13:56:40.812Z",
        "2024-08-31T04:27:43.382Z",
        "2024-08-31T06:51:16.142Z",
        "2024-08-31T08:06:43.144Z",
        "2024-08-31T13:05:38.963Z"
      ],
      "resume": [
        "2024-08-28T05:18:53.368Z",
        "2024-08-28T07:51:00.455Z",
        "2024-08-28T09:21:30.933Z",
        "2024-08-28T11:29:24.177Z",
        "2024-08-29T01:46:17.768Z",
        "2024-08-29T06:28:42.165Z",
        "2024-08-29T08:07:53.039Z",
        "2024-08-29T13:00:02.333Z",
        "2024-08-30T03:18:30.007Z",
        "2024-08-30T05:04:39.485Z",
        "2024-08-30T06:47:51.960Z",
        "2024-08-30T09:37:17.696Z",
        "2024-08-30T13:23:44.856Z",
        "2024-08-31T03:19:01.276Z",
        "2024-08-31T05:39:57.095Z",
        "2024-08-31T07:39:39.098Z",
        "2024-08-31T12:03:01.764Z",
        "2024-09-01T03:22:52.012Z"
      ],
      "end": "2024-09-01T03:22:52.012Z"
    },
    {
      "subject": "Subject, description and notes of a task can be set and edited",
      "notes": "It took quite a lot of time to get the editor mock in the integration tests working and, nevertheless, the solution is not optimal. The user has to ensure that the script shebang path is correct (unix) and/or that the .js files are executed using compatible Node.js version (Windows). The alternative would probably be to mock away the whole @inquirer/editor.",
      "begin": "2024-09-02T11:09:54.160Z",
      "suspend": [
        "2024-09-02T12:17:24.511Z",
        "2024-09-02T12:36:45.730Z",
        "2024-09-03T12:55:13.160Z",
        "2024-09-04T06:09:33.620Z",
        "2024-09-04T10:19:41.313Z",
        "2024-09-04T12:50:22.460Z",
        "2024-09-04T15:14:42.277Z",
        "2024-09-05T13:22:04.352Z",
        "2024-09-05T14:46:16.328Z",
        "2024-09-06T06:54:48.243Z",
        "2024-09-06T07:51:41.046Z",
        "2024-09-06T12:55:00.279Z",
        "2024-09-06T17:23:30.056Z",
        "2024-09-07T05:41:46.430Z",
        "2024-09-07T13:53:59.741Z",
        "2024-09-08T06:01:12.350Z",
        "2024-09-09T07:30:20.640Z",
        "2024-09-09T08:29:21.782Z",
        "2024-09-09T12:52:27.508Z",
        "2024-09-09T15:06:14.537Z",
        "2024-09-10T03:33:15.493Z",
        "2024-09-10T05:37:58.902Z",
        "2024-09-10T07:15:22.136Z",
        "2024-09-10T12:07:51.237Z",
        "2024-09-10T14:13:22.113Z",
        "2024-09-11T08:20:11.474Z",
        "2024-09-11T08:39:35.154Z"
      ],
      "resume": [
        "2024-09-02T12:27:40.307Z",
        "2024-09-03T10:30:16.126Z",
        "2024-09-04T04:47:33.281Z",
        "2024-09-04T09:37:47.297Z",
        "2024-09-04T10:56:18.481Z",
        "2024-09-04T13:30:25.597Z",
        "2024-09-05T11:34:27.689Z",
        "2024-09-05T14:24:18.795Z",
        "2024-09-06T05:16:36.621Z",
        "2024-09-06T07:05:36.121Z",
        "2024-09-06T09:36:44.177Z",
        "2024-09-06T15:01:42.209Z",
        "2024-09-07T04:32:48.943Z",
        "2024-09-07T13:36:03.717Z",
        "2024-09-08T05:15:29.824Z",
        "2024-09-09T05:10:06.989Z",
        "2024-09-09T08:04:39.597Z",
        "2024-09-09T09:35:27.135Z",
        "2024-09-09T14:46:39.645Z",
        "2024-09-10T01:27:07.473Z",
        "2024-09-10T05:02:42.182Z",
        "2024-09-10T06:51:44.326Z",
        "2024-09-10T10:12:05.073Z",
        "2024-09-10T13:51:19.088Z",
        "2024-09-11T07:14:23.562Z",
        "2024-09-11T08:33:31.021Z",
        "2024-09-11T09:14:22.629Z"
      ],
      "end": "2024-09-11T09:44:00.801Z"
    },
    {
      "subject": "Make tests work also in Windows",
      "notes": "It turned out that testing of force stopping a command with CTRL+C does not work the way I had assumed. Piping the key combination as ascii characters does not stop the process. The solution was to make the childProcessExecutor.execute() to stop the process with proc.kill() method when it receives a specific input. This doesn't result in a greceful exit, but instead returns a nonzero exit value, and the error must be handled in the test.\nPiping special characters to commands results in wrong output in Windows. In Windows the output comes from the first part of the command which is piped to the actual command, and not from the actual command. Thus, the childProcesExecutor.execute() must be used instead.\nSingle quotation marks do not combine separate words as a single string in a console command in Windows. Double quotation marks must thus be used instead.",
      "begin": "2024-09-13T09:44:29.559Z",
      "suspend": [
        "2024-09-13T10:14:47.156Z",
        "2024-09-15T15:01:56.916Z",
        "2024-09-15T15:44:18.197Z",
        "2024-09-16T06:13:42.036Z",
        "2024-09-16T08:33:42.341Z",
        "2024-09-16T12:40:43.094Z",
        "2024-09-17T06:08:15.155Z",
        "2024-09-17T07:10:49.587Z",
        "2024-09-20T11:57:57.190Z",
        "2024-09-20T12:30:31.162Z",
        "2024-09-20T12:48:01.895Z",
        "2024-09-20T15:53:29.581Z",
        "2024-09-21T06:10:02.092Z",
        "2024-09-21T11:31:39.452Z",
        "2024-09-23T09:00:33.249Z",
        "2024-09-23T13:29:16.223Z",
        "2024-09-23T14:51:20.728Z",
        "2024-09-24T03:04:42.211Z",
        "2024-09-24T05:40:16.616Z",
        "2024-09-24T06:05:15.113Z"
      ],
      "resume": [
        "2024-09-15T14:33:50.745Z",
        "2024-09-15T15:10:25.622Z",
        "2024-09-16T05:26:31.936Z",
        "2024-09-16T07:28:06.160Z",
        "2024-09-16T10:41:23.869Z",
        "2024-09-17T05:09:34.693Z",
        "2024-09-17T06:48:55.983Z",
        "2024-09-20T10:53:21.302Z",
        "2024-09-20T12:08:40.373Z",
        "2024-09-20T12:35:55.215Z",
        "2024-09-20T15:07:23.369Z",
        "2024-09-21T04:55:16.082Z",
        "2024-09-21T09:20:27.357Z",
        "2024-09-23T07:18:48.706Z",
        "2024-09-23T10:50:56.842Z",
        "2024-09-23T14:22:24.524Z",
        "2024-09-24T01:23:28.019Z",
        "2024-09-24T05:24:18.677Z",
        "2024-09-24T05:43:35.711Z"
      ]
    },
    {
      "subject": "Add VSCode settings to project",
      "description": "At least the line endings must be set to LF, and it would also be nice to get Prettier formatting working in Windows."
    },
    {
      "subject": "Improve prompt readability",
      "description": "Many prompts are currently very long since they contain both, a description of the situation and the question for the user. They can also contain long field values. These prompts can be improved by outputting the description of the situation separately with a normal intensity font (not bolded), and by using the sideHeading() function to format this output. The prompt (in bold) is then just a simple question to the user that draws the user's attention to what is essential."
    },
    {
      "subject": "Tasks can be removed from the timesheet"
    },
    {
      "subject": "Add a 'script mode' flag that prevents all commands from prompting the user for instructions"
    },
    {
      "subject": "Timesheet file can be selected using --timesheet | -t flag"
    },
    {
      "subject": "Modify the commands so that user is asked which timesheet to use if there are more than one timesheet in the directory if the timesheet is not selected using the --timesheet flag"
    },
    {
      "subject": "A new project timesheet can be created by starting the clock"
    },
    {
      "subject": "Modify calculateTimes() so that it creates a list of times spent for each day"
    },
    {
      "subject": "Modify the status command so that it prints how many hours of work have been done in the current day"
    },
    {
      "subject": "'Start', 'stop', 'suspend' and 'resume' commands display the status information after the operation"
    },
    {
      "subject": "Task listings (in 'status' and 'list') display the date of last action (i.e., 'update' date)"
    },
    {
      "subject": "Command 'new' prompts for project name if it is not given as an argument",
      "description": "Create tests for testing the new functionality and edit the code so that the tests are passed. Default value for the project name is the name of the parent directory."
    },
    {
      "subject": "Time unit conversion parameters can be changed with a command option"
    },
    {
      "subject": "Add a command that visually shows the times when the work has been done"
    },
    {
      "subject": "Add unique identifiers to tasks",
      "description": "Adding unique identifiers to tasks makes it possible to refer precisely to a specific task without writing the entire subject of the task as a task descriptor. This is especially important in script mode."
    },
    {
      "subject": "Add sequence numbers to tasks and allow referring to tasks using sequence numbers"
    },
    {
      "subject": "Allow editing the order of the tasks"
    },
    {
      "subject": "Allow showing the full task data of the next(/last) n number of active tasks (in the order of the sequence numbers)"
    },
    {
      "subject": "Allow showing the full task data of the next(/last) n number of unstarted tasks (in the order of the sequence numbers)"
    },
    {
      "subject": "Allow showing the full task data of the (next/)last n number of completed tasks (in the order of the sequence numbers)"
    },
    {
      "subject": "Add the possibility to add classification tags to the tasks and allow the task listing to be narrowed down based on these tags"
    },
    {
      "subject": "Add special tag 'recurring' which makes the 'stop' command warn before the task can be stopped and moved to 'complete' state",
      "description": "The user may want some tasks to be listed as 'active' all the time. Adding this special tag to the tasks makes it a little more difficult to move these tasks to 'complete' state."
    },
    {
      "subject": "Use of quotation marks in user entered texts and program output"
    },
    {
      "subject": "Better filtering algorithm (e.g., match-sorter) for filtering tasks"
    },
    {
      "subject": "Add user ids (many users can edit and record times)"
    },
    {
      "subject": "Add creation date and creator to tasks"
    },
    {
      "subject": "Tasks can be pushed to GitHub Projects"
    },
    {
      "subject": "Tasks can be pulled from GitHub Projects"
    },
    {
      "subject": "Sub tasks"
    },
    {
      "subject": "Task notes field can contain many notes, each with their own creation and edit times and creator and editor ids",
      "description": "Make it possible that the task notes field on the timesheet can be an array of objects instead of a string. This probably means that the resulting timesheet format should be handled as a new timesheet file version. The application should be able to handle different file versions."
    },
    {
      "subject": "Is it ok that a user can have many tasks running at the same time?"
    },
    {
      "subject": "Add codes for errors (?)"
    },
    {
      "subject": "Make sure that all commands are tested for friendly output when the command is force stopped on every possible prompt level",
      "description": "For example, the start command asks for creating a new task with a different prompt when the timesheet is empty and no task descriptor is given, and when the task descriptor is given but no matching task is found. All of these must be tested."
    },
    {
      "subject": "Add expect.hasAssertions() or expect.assertions(NUMBER) to all tests that use outside functions to do assertions"
    },
    {
      "subject": "See if the code in commands could be made clearer",
      "description": "Especially, the code of the 'status' command is a bit complicated. Maybe 'list' and 'show' commands could be improved too."
    },
    {
      "subject": "Update and review README.md and command descriptions",
      "begin": "2024-08-22T11:40:55.379Z",
      "suspend": [
        "2024-08-22T11:44:14.263Z"
      ]
    },
    {
      "subject": "Add missing TSDoc comments, combine related functions in common directory into the same files when necessary and remove unnecessary functions",
      "begin": "2024-08-02T08:39:26.960Z",
      "suspend": [
        "2024-08-02T08:51:55.636Z",
        "2024-08-02T11:23:13.244Z",
        "2024-08-16T04:09:12.628Z",
        "2024-08-21T06:27:00.315Z",
        "2024-08-21T08:26:22.992Z",
        "2024-08-21T09:38:11.719Z"
      ],
      "resume": [
        "2024-08-02T10:34:33.031Z",
        "2024-08-16T04:09:12.628Z",
        "2024-08-21T05:39:34.034Z",
        "2024-08-21T08:09:27.203Z",
        "2024-08-21T08:58:34.465Z"
      ]
    },
    {
      "subject": "Task list editing",
      "description": "All time used for editing the task list.",
      "begin": "2024-08-01T11:10:17.959Z",
      "suspend": [
        "2024-08-01T12:01:52.258Z",
        "2024-08-02T08:56:08.904Z",
        "2024-08-06T06:17:11.133Z",
        "2024-08-06T07:45:34.455Z",
        "2024-08-07T08:25:30.572Z",
        "2024-08-13T03:40:42.244Z",
        "2024-08-16T03:54:47.928Z",
        "2024-08-16T06:26:42.143Z",
        "2024-08-19T10:40:33.016Z",
        "2024-08-20T07:32:32.696Z",
        "2024-08-20T09:28:01.126Z",
        "2024-08-20T09:41:38.461Z",
        "2024-08-22T11:34:40.866Z",
        "2024-08-22T11:40:10.880Z",
        "2024-08-23T07:56:12.451Z",
        "2024-09-01T04:00:30.342Z",
        "2024-09-02T12:27:38.307Z",
        "2024-09-08T06:16:25.037Z"
      ],
      "resume": [
        "2024-08-02T08:51:55.636Z",
        "2024-08-06T06:02:58.587Z",
        "2024-08-06T07:36:34.862Z",
        "2024-08-07T08:07:36.600Z",
        "2024-08-13T03:34:07.699Z",
        "2024-08-16T03:32:54.135Z",
        "2024-08-16T05:25:56.347Z",
        "2024-08-19T10:39:43.650Z",
        "2024-08-20T07:20:56.057Z",
        "2024-08-20T09:26:25.645Z",
        "2024-08-20T09:40:20.554Z",
        "2024-08-22T11:22:21.278Z",
        "2024-08-22T11:36:29.356Z",
        "2024-08-23T07:23:59.011Z",
        "2024-09-01T03:32:41.770Z",
        "2024-09-02T12:17:43.887Z",
        "2024-09-08T06:04:50.060Z"
      ]
    },
    {
      "subject": "Upgrade dependencies"
    }
  ]
}